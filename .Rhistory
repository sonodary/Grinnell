# plot(`Average Number of Mentally Unhealthy Days` ~ `Average Number of Physically Unhealthy Days`, data=totalData)
# plot(`Average Number of Mentally Unhealthy Days` ~ `% Long Commute - Drives Alone`, data=totalData)
# plot(`Average Number of Mentally Unhealthy Days` ~ WorkersDriveAloneLong, data=totalData)
# totalData$logMental = log(totalData$`Average Number of Mentally Unhealthy Days`,10)
# plot(logMental  ~ WorkersDriveAloneLong, data=totalData)
# plot(`Average Number of Mentally Unhealthy Days` ~ `Median Household Income`, data=totalData)
# plot(`Average Number of Mentally Unhealthy Days` ~ `% Unemployed`, data=totalData)
# plot(`Average Number of Mentally Unhealthy Days` ~ `% Food Insecure`, data=totalData)
# plot(`Average Number of Mentally Unhealthy Days` ~ populationDensity, data=totalData)
#Make Drug Overdose deaths into categorical
#Chcek the distribution of drug overdose deaths
# hist(totalData$`# Drug Overdose Deaths`)
#boxplot(totalData$`# Drug Overdose Deaths`,data=totalData)
summary(totalData$`# Drug Overdose Deaths`)
#Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
#0.0     0.0    12.0   124.5    43.0 14870.0
#Transform drug overdose deaths into categorical
totalData$`# Drug Overdose Deaths`[is.na(totalData$`# Drug Overdose Deaths`)] = 0
totalData$DrugOverDoseCate = as.factor(ifelse(totalData$`# Drug Overdose Deaths` <= 12, 0, 1))
summary(totalData$`# Drug Overdose Deaths`)
summary(totalData$DrugOverDoseCate)
#install.packages("tidyverse")
library(tidyverse)
#Create a number of mental Providor per 100000 people
totalData = totalData %>%
separate(`Mental Health Provider Ratio`, c("MentalHealthProvidorratioLeft", "MentalHealthProvidorratioRight"), sep=":")
totalData$MentalHealthProvidorratioLeft = as.numeric(unlist(totalData$MentalHealthProvidorratioLeft))
totalData$MentalHealthProvidorratioRight = as.numeric(unlist(totalData$MentalHealthProvidorratioRight))
Right = totalData$MentalHealthProvidorratioRight
Left = totalData$MentalHealthProvidorratioLeft
Right[is.na(Right)] = 0
Left[is.na(Left)] = 1
totalData$MentalHealthProviderRate = (Right / Left) * 100000
colnames(totalData)
par(mfrow=c(2,2))
hist(totalData$`% Unemployed`, main = "Histogram Of Unemployed", xlab="Unemployed", ylab="Frequency")
hist(totalData$`Median Household Income`, main = "Histogram Of Median Household Income", xlab="Median Household Income", ylab="Frequency")
hist(totalData$populationDensity, main = "Histogram Of Population Density", xlab="Population Density", ylab="Frequency")
#Drop unnecessarily variables
library(dplyr)
finalData = select(totalData, -8, -11, -12, -17, -18, -27)
colnames(finalData)
#Change the name of columns
colnames(finalData) = c('FIPS','State','County', "PoorFairHealth", "PoorPhysiHealthDays", "PoorMentalHealthDays", "FoodEnvironIdx", "ExerciseOpportunity", "ExcessiveDrinking", "Unemployed", "IncomeRatio", "SocialAssociationsRate", "SevereHousingProb", "FoodInsecurity", "LmtAccessToHelthyFood", "DrugOverDoseOrigin", "InsuffSleep", "MedianHouseholdIncom", "Suicides", "SevereHousingCstBrdn", "Population", "PopulationDensity", "LongCommuDriveAlone", "DrugOverdoseDeathsCat", "MentalHealthProvider" )
boxplot(finalData$Suicides)
summary(finalData$Suicides)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
#5.116  13.688  17.131  18.361  21.183 118.974     763
#finalData$SuicideCat = as.factor(ifelse(is.na(finalData$Suicide), 'very few',
#                                      ifelse(finalData$Suicide < 13.688, 'few',
#                                       ifelse(finalData$Suicide < 17.131, 'moderate',
#                                       ifelse(finalData$Suicide < 21.183,'more',
#                                       ifelse(finalData$Suicide > 21.183, 'many', 0))))))
finalData$SuicideCat = as.factor(ifelse(is.na(finalData$Suicide), 0,
ifelse(finalData$Suicide < 13.688, 1,
ifelse(finalData$Suicide < 17.131, 2,
ifelse(finalData$Suicide < 21.183, 3,
ifelse(finalData$Suicide > 21.183, 4, 0))))))
summary(finalData$SuicideCat)
# We transformed some variables to log for a more linear relationship with the response variable
finalData$LogUnemployed = finalData$Unemployed
finalData$LogMedianIncome = log(finalData$MedianHouseholdIncom)
finalData$LogPopulationDensity = log(finalData$PopulationDensity)
# plot(finalData$PoorMentalHealthDays ~ finalData$logDrugDaeath)
# plot(finalData$PoorMentalHealthDays ~ finalData$logLogDrugDaeath)
#
# #Look at the relationship between  severe housing and commute time
# plot(finalData$SevereHousingProb ~ finalData$LongCommuDriveAlone)
#Best subset model
require(leaps)
#Omit the observations with missing data
colSums(is.na(finalData))
#               FIPS                  State                 County         PoorFairHealth    PoorPhysiHealthDays   PoorMentalHealthDays         FoodEnvironIdx
#                   0                      0                     51                      0                      0                      0                     19
# ExerciseOpportunity      ExcessiveDrinking             Unemployed            IncomeRatio SocialAssociationsRate       ViolentCrimeRate      SevereHousingProb
#                   6                      0                      1                      2                      0                    191                      0
#      FoodInsecurity  LmtAccessToHelthyFood     DrugOverDoseOrigin            InsuffSleep   MedianHouseholdIncom               Suicides   SevereHousingCstBrdn
#                   0                     19                      0                      0                      1                    763                      4
#          Population      PopulationDensity    LongCommuDriveAlone     DrugOverdoseDeaths   MentalHealthProvider             SuicideCat          LogUnemployed
#                   0                     52                      1                      0                      0                      0                      1
#     LogMedianIncome   logPopulationDensity
#Since ViolentCrime and Suicides have a lot of missing variables, we omit the variables from dataset
finalData2 = select(finalData, -19)
#Drop variables with missing data
finalData2 <- na.omit(finalData2)
##################
#Extra sum of squares
##################
#Reduced model with all explanatory variables (do not include poor physical health)
full.data = data.frame(finalData2$PoorFairHealth, finalData2$FoodEnvironIdx, finalData2$ExerciseOpportunity, finalData2$ExcessiveDrinking, finalData2$Unemployed, finalData2$IncomeRatio, finalData2$SocialAssociationsRate, finalData2$SevereHousingProb, finalData2$FoodInsecurity, finalData2$LmtAccessToHelthyFood, finalData2$InsuffSleep, finalData2$MedianHouseholdIncom, finalData2$SevereHousingCstBrdn, finalData2$Population, finalData2$PopulationDensity, finalData2$DrugOverdoseDeathsCat, finalData2$MentalHealthProvider, finalData2$SuicideCat, finalData2$LogUnemployed, finalData2$LogMedianIncome, finalData2$LogPopulationDensity)
ncol(full.data)
#histogram
hist(finalData2$PoorFairHealth, main = "Histogram Of Poor or Fair Health", xlab="Poor or Fair Health", ylab="Frequency")
hist(finalData2$PoorFairHealth, main = "Histogram Of Unemployed", xlab="Unemployed", ylab="Frequency")
hist(finalData2$PoorFairHealth, main = "Histogram Of Social Associations Rate", xlab="SocialAssociationsRate", ylab="Frequency")
hist(finalData2$PoorFairHealth, main = "Histogram Of Poor or Fair Health", xlab="Poor or Fair Health", ylab="Frequency")
hist(finalData2$PoorFairHealth, main = "Histogram Of Poor or Fair Health", xlab="Poor or Fair Health", ylab="Frequency")
summary(finalData2$DrugOverdoseDeathsCat)
#Run the step wise regession to find the second reduced model
reducedmodel1 <- regsubsets(finalData2$PoorMentalHealthDays~., data = full.data, nbest = 3, nvmax = 10)
#summary(bestsub.model1)
cbind(
Adj_r2 = summary(reducedmodel1)$adjr2,
elements = summary(reducedmodel1)$which
)
plot(reducedmodel1, scale = "adjr2", main = "Adjusted R^2")
#First reduced model
FirstReduced = lm(finalData2$PoorMentalHealthDays ~ finalData2$PoorFairHealth + finalData2$FoodInsecurity + finalData2$InsuffSleep + finalData2$DrugOverdoseDeathsCat + finalData2$SuicideCat + finalData2$LogMedianIncome, data = finalData2)
summary(FirstReduced)
#Chcek the residual plot
fittedFirstReduced = FirstReduced$fitted
residualFirstReduced = FirstReduced$res
plot(fittedFirstReduced, residualFirstReduced)
abline(h = 0)
plot(finalData2$PoorFairHealth, residualFirstReduced)
abline(h = 0)
plot(finalData2$FoodInsecurity, residualFirstReduced)
abline(h = 0)
plot(finalData2$DrugOverdoseDeathsCat, residualFirstReduced)
abline(h = 0)
plot(finalData2$InsuffSleep, residualFirstReduced)
abline(h = 0)
plot(finalData2$SuicideCat, residualFirstReduced)
abline(h = 0)
plot(finalData2$LogMedianIncome, residualFirstReduced)
abline(h = 0)
#Check which interaction variables to include
FirstReducedInteraction = lm(finalData2$PoorMentalHealthDays ~ finalData2$PoorFairHealth * finalData2$FoodInsecurity * finalData2$InsuffSleep * finalData2$DrugOverdoseDeathsCat * finalData2$SuicideCat * finalData2$LogMedianIncome, data = finalData2)
summary(FirstReducedInteraction)
#Second reduced model
secondReduced = lm(finalData2$PoorMentalHealthDays ~ finalData2$PoorFairHealth + finalData2$FoodInsecurity + finalData2$InsuffSleep + finalData2$DrugOverdoseDeathsCat + finalData2$SuicideCat + finalData2$LogMedianIncome + finalData2$PoorFairHealth*finalData2$FoodInsecurity +  finalData2$FoodInsecurity*finalData2$InsuffSleep + finalData2$FoodInsecurity*finalData2$LogMedianIncome + finalData2$InsuffSleep*finalData2$LogMedianIncome, data = finalData2)
summary(secondReduced)
#Check the residual plot
fittedSecondReduced = secondReduced$fitted
residualSecondReduced = secondReduced$res
par(mfrow=c(2,2))
qqnorm(residualSecondReduced)
qqline(residualSecondReduced)
plot(fittedSecondReduced, residualSecondReduced, xlab="Fitted Values", ylab="Residual")
abline(h = 0)
plot(finalData2$PoorFairHealth, residualSecondReduced, xlab="Poor Or Fair Health", ylab="Residual")
abline(h = 0)
plot(finalData2$FoodInsecurity, residualSecondReduced, xlab="Food Insecurity", ylab="Residual")
abline(h = 0)
DrugOverD = as.integer(finalData2$DrugOverdoseDeathsCat) - 1
plot(DrugOverD, residualSecondReduced, xlab="Drug Overdose Deaths (categorical)", ylab="Residual")
abline(h = 0)
Suic = as.integer(finalData2$SuicideCat) - 1
plot(Suic, residualSecondReduced, xlab="Suicides (categorical)", ylab="Residual")
abline(h = 0)
plot(finalData2$InsuffSleep, residualSecondReduced, xlab="Insufficient Sleep", ylab="Residual")
abline(h = 0)
plot(finalData2$LogMedianIncome, residualSecondReduced, xlab="Log of Median Income", ylab="Residual")
abline(h = 0)
fullModel = lm(finalData2$PoorMentalHealthDays ~ finalData2$PoorFairHealth + finalData2$FoodInsecurity + finalData2$InsuffSleep + finalData2$DrugOverdoseDeathsCat + finalData2$SuicideCat + finalData2$LogMedianIncome + finalData2$LongCommuDriveAlone + finalData2$PoorFairHealth*finalData2$FoodInsecurity +  finalData2$FoodInsecurity*finalData2$InsuffSleep + finalData2$FoodInsecurity*finalData2$LogMedianIncome + finalData2$InsuffSleep*finalData2$LogMedianIncome + finalData2$PoorFairHealth*finalData2$LongCommuDriveAlone + finalData2$FoodInsecurity*finalData2$LongCommuDriveAlone + finalData2$InsuffSleep*finalData2$LongCommuDriveAlone, data = finalData2)
summary(fullModel)
anova(fullModel,secondReduced)
summary(fullModel)
anova(fullModel,secondReduced)
par(mfrow=c(2,3))
qqnorm(residualSecondReduced)
qqline(residualSecondReduced)
plot(fittedSecondReduced, residualSecondReduced, xlab="Fitted Values", ylab="Residual")
abline(h = 0)
plot(finalData2$PoorFairHealth, residualSecondReduced, xlab="Poor Or Fair Health", ylab="Residual")
abline(h = 0)
plot(finalData2$FoodInsecurity, residualSecondReduced, xlab="Food Insecurity", ylab="Residual")
abline(h = 0)
DrugOverD = as.integer(finalData2$DrugOverdoseDeathsCat) - 1
plot(DrugOverD, residualSecondReduced, xlab="Drug Overdose Deaths (categorical)", ylab="Residual")
abline(h = 0)
Suic = as.integer(finalData2$SuicideCat) - 1
plot(Suic, residualSecondReduced, xlab="Suicides (categorical)", ylab="Residual")
abline(h = 0)
plot(finalData2$InsuffSleep, residualSecondReduced, xlab="Insufficient Sleep", ylab="Residual")
abline(h = 0)
plot(finalData2$LogMedianIncome, residualSecondReduced, xlab="Log of Median Income", ylab="Residual")
abline(h = 0)
#Second reduced model
secondReduced = lm(finalData2$PoorMentalHealthDays ~ finalData2$PoorFairHealth + finalData2$FoodInsecurity + finalData2$InsuffSleep + finalData2$DrugOverdoseDeathsCat + finalData2$SuicideCat + finalData2$LogMedianIncome + finalData2$PoorFairHealth*finalData2$FoodInsecurity +  finalData2$FoodInsecurity*finalData2$InsuffSleep + finalData2$FoodInsecurity*finalData2$LogMedianIncome + finalData2$InsuffSleep*finalData2$LogMedianIncome, data = finalData2)
summary(secondReduced)
require(mosaic)
mplot(finalData2)
summary(finalData2$LongCommuDriveAlone)
hist(finalData2$LongCommuDriveAlone)
finalData2$
mplot(finalData2)
mplot(finalData2)
mplot(finalData2)
LongCommuteCat = as.factor(ifelse(finalData2$LongCommuDriveAlone<= 17.25, "Few",
ifelse(finalData2$LongCommuDriveAlone <= 32.35, "Middle",
ifelse(finalData2$LongCommuDriveAlone > 32.35, "Many",
))))
LongCommuteCat = as.factor(ifelse(finalData2$LongCommuDriveAlone<= 17.25, "Few",
ifelse(finalData2$LongCommuDriveAlone <= 32.35, "Middle",
ifelse(finalData2$LongCommuDriveAlone > 32.35, "Many", 0
))))
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute")
p2 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days", col="Long Commute")
p3 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days", col="Long Commute")
p4 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Drug Overdose Deaths", y="Poor Mental Health Days", col="Long Commute")
p5 = ggplot(finalData2, aes(x=finalData2$SuicideCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Suicides", y="Poor Mental Health Days", col="Long Commute Drive Alone")
p6 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days", col="Long Commute Drive Alone")
grid.arrange(p1, p2, nrow = 1)
library(gridExtra)
library(grid)
library(ggplot2)
library(lattice)
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute")
p2 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days", col="Long Commute")
p3 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days", col="Long Commute")
p4 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Drug Overdose Deaths", y="Poor Mental Health Days", col="Long Commute")
p5 = ggplot(finalData2, aes(x=finalData2$SuicideCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Suicides", y="Poor Mental Health Days", col="Long Commute Drive Alone")
p6 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days", col="Long Commute Drive Alone")
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p3, p4, nrow = 1)
grid.arrange(p5, p6, nrow = 1)
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute") +   geom_smooth(method = "lm", se = "false")
p1
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm", se = "false")
p1
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p1
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p2 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p3 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p4 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Drug Overdose Deaths", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p5 = ggplot(finalData2, aes(x=finalData2$SuicideCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Suicides", y="Poor Mental Health Days", col="Long Commute Drive Alone") + geom_smooth(method = "lm")
p6 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days", col="Long Commute Drive Alone") + geom_smooth(method = "lm")
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p3, p4, nrow = 1)
grid.arrange(p5, p6, nrow = 1)
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p2 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p3 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p4 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(y="Drug Overdose Deaths", x="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p5 = ggplot(finalData2, aes(y=finalData2$SuicideCat, x=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Suicides", y="Poor Mental Health Days", col="Long Commute Drive Alone") + geom_smooth(method = "lm")
p6 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days", col="Long Commute Drive Alone") + geom_smooth(method = "lm")
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p3, p4, nrow = 1)
grid.arrange(p5, p6, nrow = 1)
p1 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p2 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p3 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days", col="Long Commute") + geom_smooth(method = "lm")
p4 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(col="Drug Overdose Deaths", y="Poor Mental Health Days", x="Long Commute") + geom_smooth(method = "lm")
p5 = ggplot(finalData2, aes(x=finalData2$SuicideCat, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(col="Suicides", y="Poor Mental Health Days", x="Long Commute Drive Alone") + geom_smooth(method = "lm")
p6 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays, color=LongCommuteCat)) +
geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days", col="Long Commute Drive Alone") + geom_smooth(method = "lm")
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p3, p4, nrow = 1)
grid.arrange(p5, p6, nrow = 1)
ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays)) + geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p7 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p8 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p9 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p10 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays)) + geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p11 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(y="Poor Mental Health Days", x="Long Commute") + geom_smooth(method = "lm")
p12 = ggplot(finalData2, aes(x=finalData2$SuicideCat, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(y="Poor Mental Health Days", x="Long Commute Drive Alone") + geom_smooth(method = "lm")
grid.arrange(p7, p8, nrow = 1)
grid.arrange(p9, p10, nrow = 1)
grid.arrange(p11, p12, nrow = 1)
p7 = ggplot(finalData2, aes(x=finalData2$PoorFairHealth, y=finalData2$PoorMentalHealthDays)) + geom_point() + labs(x="Poor Fair Health", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p8 = ggplot(finalData2, aes(x=finalData2$InsuffSleep, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(x="Insufficient Sleep", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p9 = ggplot(finalData2, aes(x=finalData2$FoodInsecurity, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(x="Food Insecurity", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p10 = ggplot(finalData2, aes(x=finalData2$LogMedianIncome, y=finalData2$PoorMentalHealthDays)) + geom_point() + labs(x="Log Of Median Income", y="Poor Mental Health Days") + geom_smooth(method = "lm")
p11 = ggplot(finalData2, aes(x=finalData2$DrugOverdoseDeathsCat, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(y="Poor Mental Health Days", x="Drug Overdose") + geom_smooth(method = "lm")
p12 = ggplot(finalData2, aes(x=finalData2$SuicideCat, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(y="Poor Mental Health Days", x="Suicides") + geom_smooth(method = "lm")
p13 = ggplot(finalData2, aes(x=finalData2$LongCommuDriveAlone, y=finalData2$PoorMentalHealthDays)) +
geom_point() + labs(y="Poor Mental Health Days", x="Long Commute Drive Alone") + geom_smooth(method = "lm")
grid.arrange(p7, p8, nrow = 1)
grid.arrange(p9, p10, nrow = 1)
grid.arrange(p11, p12, nrow = 1)
p13
grid.arrange(p7, p8, p9, nrow = 1)
grid.arrange(p9, p10, p11, nrow = 1)
grid.arrange(p12, p13, nrow = 1)
p13
grid.arrange(p1, p2, nrow = 1)
grid.arrange(p3, p6, nrow = 1)
#Correlation between long commute and other explanatory variables
library(corrplot)
## corrplot 0.92 loaded
elements = data.frame(finalData2$PoorFairHealth , finalData2$FoodInsecurity , finalData2$InsuffSleep , finalData2$DrugOverdoseDeathsCat , finalData2$SuicideCat , finalData2$LogMedianIncome, finalData2$LongCommuDriveAlone, data = finalData2)
M = cor(elements)
elements = data.frame(finalData2$PoorFairHealth , finalData2$FoodInsecurity , finalData2$InsuffSleep , finalData2$LogMedianIncome, finalData2$LongCommuDriveAlone, data = finalData2)
M = cor(elements)
elements = as.numeric(data.frame(finalData2$PoorFairHealth , finalData2$FoodInsecurity , finalData2$InsuffSleep , finalData2$DrugOverdoseDeathsCat , finalData2$SuicideCat , finalData2$LogMedianIncome, finalData2$LongCommuDriveAlone, data = finalData2))
elements = data.frame(as.numeric(finalData2$PoorFairHealth) , as.numeric(finalData2$FoodInsecurity) , as.numeric(finalData2$InsuffSleep) , as.numeric(finalData2$DrugOverdoseDeathsCat) , as.numeric(finalData2$SuicideCat) , as.numeric(finalData2$LogMedianIncome), as.numeric(finalData2$LongCommuDriveAlone), data = finalData2)
M = cor(elements)
elements = data.frame(as.numeric(finalData2$PoorFairHealth) , as.numeric(finalData2$FoodInsecurity) , as.numeric(finalData2$InsuffSleep) , as.numeric(finalData2$DrugOverdoseDeathsCat) , as.numeric(finalData2$SuicideCat) , as.numeric(finalData2$LogMedianIncome), as.numeric(finalData2$LongCommuDriveAlone))
M = cor(elements)
corrplot(M, method = 'number')
corrplot(M)
#Correlation between long commute and other explanatory variables
library(corrplot)
## corrplot 0.92 loaded
elements = data.frame(finalData2$PoorFairHealth , (finalData2$FoodInsecurity) , (finalData2$InsuffSleep) , (finalData2$DrugOverdoseDeathsCat) , (finalData2$SuicideCat) , (finalData2$LogMedianIncome), (finalData2$LongCommuDriveAlone))
M = cor(elements)
corrplot(cor(M),addCoef.col="black")
M = cor(elements)
elements = data.frame(as.numeric(finalData2$PoorFairHealth) , as.numeric(finalData2$FoodInsecurity) , as.numeric(finalData2$InsuffSleep) , as.numeric(finalData2$DrugOverdoseDeathsCat) , as.numeric(finalData2$SuicideCat) , as.numeric(finalData2$LogMedianIncome), as.numeric(finalData2$LongCommuDriveAlone))
M = cor(elements)
colnames(M) <- c("Poor Fair", "Food Inseurity", "Insufficient Sleep", "Drug", "Sucides", "Income", "Long Commute" 1:9)
colnames(M) <- c("Poor Fair", "Food Inseurity", "Insufficient Sleep", "Drug", "Sucides", "Income", "Long Commute", 1:9)
colnames(M) <- c("Poor Fair", "Food Inseurity", "Insufficient Sleep", "Drug", "Sucides", "Income", "Long Commute", 1:8)
M = cor(elements)
colnames(M) <- c("Poor Fair", "Food Inseurity", "Insufficient Sleep", "Drug", "Sucides", "Income", "Long Commute")
corrplot(cor(M),addCoef.col="black")
#Second reduced model
secondReduced = lm(finalData2$PoorMentalHealthDays ~ finalData2$PoorFairHealth + finalData2$FoodInsecurity + finalData2$InsuffSleep + finalData2$DrugOverdoseDeathsCat + finalData2$SuicideCat + finalData2$LogMedianIncome + finalData2$PoorFairHealth*finalData2$FoodInsecurity +  finalData2$FoodInsecurity*finalData2$InsuffSleep + finalData2$FoodInsecurity*finalData2$LogMedianIncome + finalData2$InsuffSleep*finalData2$LogMedianIncome, data = finalData2)
summary(secondReduced)
corrplot(cor(M),addCoef.col="black")
View(finalData2$SuicideCat)
knitr::opts_chunk$set(echo = TRUE)
View(full.data)
colSums(is.na(finalData))
View(data_keep)
View(data_keep2)
View(land)
View(totalData)
write.csv(finalData2, "project_data.csv")
write.csv(finalData2, "project_final_data.csv")
summary(FirstReduced)
?mpg
mpg
library(ggplot2)
library(ggplot2)
mpg
library(ggplot2)
mpg
ggplot(data=mpg) +
geom_point(mapiing = aes(x = dispel, y = hwy))
library(ggplot2)
mpg
ggplot2(data=mpg) +
geom_point(mapiing = aes(x = dispel, y = hwy))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
)
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
library(ggplot2)
mpg
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = displ < 5))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=dispel))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, stroke=displ))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color=hwy))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = displ))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow=2)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow=3)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(. ~ class, nrow=3)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(,~ class, nrow=3)
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(.~ class, nrow=3)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = class)) +
facet_wrap(.~ hwy, nrow=3)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = class)) +
facet_wrap(.~ hwy, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
# mpg
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = displ, y = hwy)) +
#   facet_wrap(~ class, nrow=3)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = displ, y = class)) +
#   facet_wrap(.~ hwy, nrow=3)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
library(ggplot2)
# mpg
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = displ, y = hwy)) +
#   facet_wrap(~ class, nrow=3)
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = displ, y = class)) +
#   facet_wrap(.~ hwy, nrow=3)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
# ggplot(data = mpg) +
#   geom_point(mapping = aes(x = class, y = drv))
